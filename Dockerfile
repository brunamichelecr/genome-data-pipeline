# ----------------------------------------------------
# Dockerfile para Aplica√ß√£o Web Python (Flask/Pipeline)
# ----------------------------------------------------

# Imagem base Python (leve e ideal para webapps)
FROM python:3.10-slim

# Define o diret√≥rio de trabalho dentro do container
WORKDIR /app

# Copia o arquivo de depend√™ncias primeiro para cache
COPY requirements.txt .

# üö® CORRE√á√ÉO CR√çTICA: Instala depend√™ncias de sistema.
# Isso resolve o erro "Can't connect to HTTPS URL because o SSL module is not available."
# E instala o 'libpq-dev' necess√°rio para o psycopg2.
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    libssl-dev \
    gcc \
    && rm -rf /var/lib/apt/lists/*

# Instala todas as depend√™ncias Python
RUN pip install --no-cache-dir -r requirements.txt

# Copia todo o c√≥digo do projeto (incluindo init_db.py, application.py, etc.)
COPY . /app

# Define a porta que o container ir√° escutar.
# O ECS Fargate ir√° mapear esta porta.
EXPOSE 80 

# Define o comando de execu√ß√£o principal (Gunicorn para produ√ß√£o).
# Usa a porta 80 e o objeto 'application' do m√≥dulo 'application'.
CMD ["gunicorn", "--bind", "0.0.0.0:80", "application:application"]

# Vari√°vel para logs (boa pr√°tica)
ENV PYTHONUNBUFFERED 1